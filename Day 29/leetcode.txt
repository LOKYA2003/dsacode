# def product_except_self(nums):
#     n = len(nums)
#     # Initialize arrays to store prefix and suffix products
#     prefix_products = [1] * n
#     suffix_products = [1] * n
    
#     # Compute prefix products
#     for i in range(1, n):
#         prefix_products[i] = prefix_products[i - 1] * nums[i - 1]
    
#     # Compute suffix products
#     for i in range(n - 2, -1, -1):
#         suffix_products[i] = suffix_products[i + 1] * nums[i + 1]
    
#     # Compute the final answer array using prefix and suffix products
#     answer = [prefix_products[i] * suffix_products[i] for i in range(n)]
    
#     return answer

# # Example usage:
# nums = [1, 2, 3, 4]
# print(product_except_self(nums))  # Output: [24, 12, 8, 6]


